version: '3.4'

services:
  portainer:
    container_name: portainer
    restart: always
    ports: 
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  sonarqubedb:
    container_name: sonarqubedb
    environment:
      POSTGRES_USER: sonartest
      POSTGRES_PASSWORD: sonartest
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  sonarqube:
    container_name: sonarqube
    depends_on:
      - sonarqubedb
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqubedb:5432/sonar
      SONAR_JDBC_USERNAME: sonartest
      SONAR_JDBC_PASSWORD: sonartest
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9100:9000"
  
  catalog-mongoexpress:
    container_name: catalogMongoExpress
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: dfugita
      ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_URL: mongodb://catalogMongodb:27017
    links:
      - catalog-mongodb
    networks:
      - catalog-network

  catalog-mongodb:
    container_name: catalogMongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - catalog-network

  elasticsearch:
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic-network
      - catalog-network
  
  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - 9010:5601
    networks:
      - elastic-network

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - 5672:5672
        - 15672:15672
    networks:
      - catalog-network

  grafana:
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - prometheus-network

  prometheus:
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - prometheus-network

  jaeger: 
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "9411:9411"
      - 14268:14268
      - 4317:4317
    networks:
      - jaeger-network

  cadvisor:
    container_name: cadvisor
    ports:
    - 18080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - prometheus-network
      - catalog-network

  catalog.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - DatabaseSettings__ConnectionString=mongodb://catalogMongodb:27017
      - JaegerConfiguration__Uri=http://jaeger:4317
      - ElasticConfiguration__Uri=http://elasticsearch:9200
    ports:
      - 8006:80
    networks:
      - catalog-network
      - prometheus-network
      - jaeger-network

